(in-package :petahsaurus.api)

(defun create-token-from-db (email)
  (let* ((usr (db:get-user-by-email email))
         (vid (assoc :id usr))
         (id (and vid (cdr vid)))
         (vvalidate (assoc :validation usr))
         (validate (and vvalidate (cdr vvalidate)))
         (isfull (string= validate "COMPLETE")))
    (tok:create-token id email isfull)))

(defun gen-tmp-token (email)
  (let* ((validation (db:request-validation email))
         (value (create-token-from-db email)))
    (format t "~A~%" (concatenate 'string "http://localhost:5000/api/validate/" validation))
    (json 200 `((tok . ,(concatenate 'string value))))))

(setf (ningle:route *app* "/api/checkemail" :method :post)
      (lambda (params)
        (if (db:has-user-email (param params "email"))
          (json 200 `((exists . t)))
          (json 400 `((exists . false)))))) ; todo make this not a string

(setf (ningle:route *app* "/api/signup" :method :post)
      (lambda (params)
        (let ((email (param params "email"))
              (username (param params "username")))
          (unless (db:has-user-email (param params "email"))
            (db:create-user username email))
          (gen-tmp-token email))))

(setf (ningle:route *app* "/api/signin" :method :post)
      (lambda (params)
        (let ((email (param params "email")))
          (gen-tmp-token email))))

(setf (ningle:route *app* "/api/validate/:vid")
      (lambda (params)
        (let ((validation (param params :vid)))
          (db:validate validation)
          '(200 () ("Thanks! Please complete your signin!")))))

(setf (ningle:route *app* "/api/upgrade" :method :post)
      (lambda (params)
        (let ((tok (param params "tok")))
          (if (tok:is-partially-valid tok)
              (let ((email (tok:get-from-token tok "email")))
                (gen-tmp-token email))
            '(401 () ("Invalid Token"))))))

(defun authorized (func)
  (lambda (params)
    (let ((tok (param params "tok")))
      (if (tok:is-valid tok)
          (funcall func params)
          '(401 () ("Invalid Token"))))))

(setf (ningle:route *app* "/api/refresh")
      (authorized (lambda (params)
                    (gen-tmp-token email))))
